triggers:
  push:
    branches:
      - master
  merge_request:
    branches:
      - master
  manual: true

variables:
  PYTHON_VERSION: "3.10"
  FLASK_DEBUG: "0"
  FLASK_TESTING: "1"
  FLASK_ENV: "development"

stages:
  - test
  - build
  - deploy

jobs:
  test:
    stage: test
    runs_on: linux
    steps:
      - run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        name: 安装测试依赖

      - run: pytest app/tests/unit --cov=app --cov-report=xml
        name: 单元测试

      - run: pytest app/tests/integration
        name: 集成测试

      # - run: pytest tests/functional
      #   name: 功能测试

  build:
    stage: build
    runs_on: linux
    when:
      branch: [master]
      event: push, merge_request
    steps:
      - run: |
          docker login -u ${SWR_USER} -p ${SWR_PASSWORD} swr.cn-north-4.myhuaweicloud.com
          docker build -t swr.cn-north-4.myhuaweicloud.com/${SWR_ORG}/studyspot-backend:latest .
          docker push swr.cn-north-4.myhuaweicloud.com/${SWR_ORG}/studyspot-backend:latest
        name: 构建并推送镜像

  deploy-production:
    stage: deploy
    runs_on: linux
    when:
      branch: [master]
      event: push, merge_request
    steps:
      - run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${PRODUCTION_HOST} >> ~/.ssh/known_hosts
        name: 配置SSH

      - run: |
          ssh ${PRODUCTION_USERNAME}@${PRODUCTION_HOST} "mkdir -p ~/studyspot-backend"
          scp docker-compose.yml .env.example ${PRODUCTION_USERNAME}@${PRODUCTION_HOST}:~/studyspot-backend/
        name: 传输配置文件

      - run: |
          ssh ${PRODUCTION_USERNAME}@${PRODUCTION_HOST} "cd ~/studyspot-backend && \
          cp .env.example .env && \
          sed -i 's/\${PRODUCTION_DB_USERNAME}/${PRODUCTION_DB_USERNAME}/g' .env && \
          sed -i 's/\${PRODUCTION_DB_PASSWORD}/${PRODUCTION_DB_PASSWORD}/g' .env && \
          sudo docker-compose pull && \
          sudo docker-compose up -d"
        name: 部署应用
